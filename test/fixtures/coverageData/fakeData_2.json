[
  {
    "url": "http://localhost:5173/src/store/message.ts",
    "scriptId": "77",
    "source": "export function write(container, value) {\n  return {\n    type: \"write\",\n    container,\n    value\n  };\n}\nexport function update(container, generator) {\n  return {\n    type: \"update\",\n    container,\n    generator\n  };\n}\nexport function reset(container) {\n  return {\n    type: \"reset\",\n    container\n  };\n}\nexport function run(effect) {\n  return {\n    type: \"run\",\n    effect\n  };\n}\nexport function batch(messages) {\n  return {\n    type: \"batch\",\n    messages\n  };\n}\nexport function use(rule, ...input) {\n  return {\n    type: \"use\",\n    rule,\n    input: input.length === 0 ? void 0 : input[0]\n  };\n}\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lc3NhZ2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQmF0Y2hNZXNzYWdlLCBDb250YWluZXIsIFJ1bk1lc3NhZ2UsIFVzZU1lc3NhZ2UsIFN0b3JlTWVzc2FnZSwgV3JpdGVNZXNzYWdlLCBSdWxlLCBSZXNldE1lc3NhZ2UsIFVwZGF0ZU1lc3NhZ2UgfSBmcm9tIFwiLi9zdG9yZVwiXG5cbmV4cG9ydCBmdW5jdGlvbiB3cml0ZTxULCBNID0gVD4oY29udGFpbmVyOiBDb250YWluZXI8VCwgTT4sIHZhbHVlOiBNKTogV3JpdGVNZXNzYWdlPFQsIE0+IHtcbiAgcmV0dXJuIHtcbiAgICB0eXBlOiBcIndyaXRlXCIsXG4gICAgY29udGFpbmVyLFxuICAgIHZhbHVlXG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZTxULCBNID0gVD4oY29udGFpbmVyOiBDb250YWluZXI8VCwgTT4sIGdlbmVyYXRvcjogKGN1cnJlbnQ6IFQpID0+IE0pOiBVcGRhdGVNZXNzYWdlPFQsIE0+IHtcbiAgcmV0dXJuIHtcbiAgICB0eXBlOiBcInVwZGF0ZVwiLFxuICAgIGNvbnRhaW5lcixcbiAgICBnZW5lcmF0b3JcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gcmVzZXQ8VCwgTSA9IFQ+KGNvbnRhaW5lcjogQ29udGFpbmVyPFQsIE0+KTogUmVzZXRNZXNzYWdlPFQsIE0+IHtcbiAgcmV0dXJuIHtcbiAgICB0eXBlOiBcInJlc2V0XCIsXG4gICAgY29udGFpbmVyXG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJ1bihlZmZlY3Q6ICgpID0+IHZvaWQpOiBSdW5NZXNzYWdlIHtcbiAgcmV0dXJuIHtcbiAgICB0eXBlOiBcInJ1blwiLFxuICAgIGVmZmVjdFxuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBiYXRjaChtZXNzYWdlczogQXJyYXk8U3RvcmVNZXNzYWdlPGFueT4+KTogQmF0Y2hNZXNzYWdlIHtcbiAgcmV0dXJuIHtcbiAgICB0eXBlOiBcImJhdGNoXCIsXG4gICAgbWVzc2FnZXNcbiAgfVxufVxuXG5leHBvcnQgdHlwZSBSdWxlQXJnPFE+ID0gUSBleHRlbmRzIHVuZGVmaW5lZCA/IFtdIDogW1FdXG5cbmV4cG9ydCBmdW5jdGlvbiB1c2U8USA9IHVuZGVmaW5lZD4ocnVsZTogUnVsZTxRPiwgLi4uaW5wdXQ6IFJ1bGVBcmc8UT4pOiBVc2VNZXNzYWdlIHtcbiAgcmV0dXJuIHtcbiAgICB0eXBlOiBcInVzZVwiLFxuICAgIHJ1bGUsXG4gICAgaW5wdXQ6IGlucHV0Lmxlbmd0aCA9PT0gMCA/IHVuZGVmaW5lZCA6IGlucHV0WzBdXG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6IkFBRU8sZ0JBQVMsTUFBZ0IsV0FBNEIsT0FBOEI7QUFDeEYsU0FBTztBQUFBLElBQ0wsTUFBTTtBQUFBLElBQ047QUFBQSxJQUNBO0FBQUEsRUFDRjtBQUNGO0FBRU8sZ0JBQVMsT0FBaUIsV0FBNEIsV0FBbUQ7QUFDOUcsU0FBTztBQUFBLElBQ0wsTUFBTTtBQUFBLElBQ047QUFBQSxJQUNBO0FBQUEsRUFDRjtBQUNGO0FBRU8sZ0JBQVMsTUFBZ0IsV0FBZ0Q7QUFDOUUsU0FBTztBQUFBLElBQ0wsTUFBTTtBQUFBLElBQ047QUFBQSxFQUNGO0FBQ0Y7QUFFTyxnQkFBUyxJQUFJLFFBQWdDO0FBQ2xELFNBQU87QUFBQSxJQUNMLE1BQU07QUFBQSxJQUNOO0FBQUEsRUFDRjtBQUNGO0FBRU8sZ0JBQVMsTUFBTSxVQUFrRDtBQUN0RSxTQUFPO0FBQUEsSUFDTCxNQUFNO0FBQUEsSUFDTjtBQUFBLEVBQ0Y7QUFDRjtBQUlPLGdCQUFTLElBQW1CLFNBQWtCLE9BQStCO0FBQ2xGLFNBQU87QUFBQSxJQUNMLE1BQU07QUFBQSxJQUNOO0FBQUEsSUFDQSxPQUFPLE1BQU0sV0FBVyxJQUFJLFNBQVksTUFBTSxDQUFDO0FBQUEsRUFDakQ7QUFDRjsiLCJuYW1lcyI6W119",
    "functions": [
      {
        "functionName": "",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 0,
            "endOffset": 2972,
            "count": 1
          }
        ]
      },
      {
        "functionName": "write",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 7,
            "endOffset": 103,
            "count": 94
          }
        ]
      },
      {
        "functionName": "update",
        "isBlockCoverage": false,
        "ranges": [
          {
            "startOffset": 111,
            "endOffset": 217,
            "count": 0
          }
        ]
      },
      {
        "functionName": "reset",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 225,
            "endOffset": 303,
            "count": 1
          }
        ]
      },
      {
        "functionName": "run",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 311,
            "endOffset": 379,
            "count": 1
          }
        ]
      },
      {
        "functionName": "batch",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 387,
            "endOffset": 463,
            "count": 2
          }
        ]
      },
      {
        "functionName": "use",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 471,
            "endOffset": 596,
            "count": 8
          },
          {
            "startOffset": 570,
            "endOffset": 578,
            "count": 4
          },
          {
            "startOffset": 579,
            "endOffset": 589,
            "count": 4
          }
        ]
      }
    ]
  },
  {
    "url": "http://localhost:5173/src/store/rule.ts",
    "scriptId": "79",
    "source": "export function rule(definition) {\n  return {\n    definition\n  };\n}\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJ1bGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR2V0U3RhdGUsIFJ1bGUsIFN0b3JlTWVzc2FnZSB9IGZyb20gXCIuL3N0b3JlLmpzXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBydWxlPFEgPSB1bmRlZmluZWQ+KGRlZmluaXRpb246IChnZXQ6IEdldFN0YXRlLCBpbnB1dFZhbHVlOiBRKSA9PiBTdG9yZU1lc3NhZ2U8YW55Pik6IFJ1bGU8UT4ge1xuICByZXR1cm4ge1xuICAgIGRlZmluaXRpb25cbiAgfVxufVxuXG4iXSwibWFwcGluZ3MiOiJBQUVPLGdCQUFTLEtBQW9CLFlBQTBFO0FBQzVHLFNBQU87QUFBQSxJQUNMO0FBQUEsRUFDRjtBQUNGOyIsIm5hbWVzIjpbXX0=",
    "functions": [
      {
        "functionName": "",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 0,
            "endOffset": 595,
            "count": 1
          }
        ]
      },
      {
        "functionName": "rule",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 7,
            "endOffset": 67,
            "count": 4
          }
        ]
      }
    ]
  },
  {
    "url": "http://localhost:5173/src/store/container.ts",
    "scriptId": "80",
    "source": "import { Container } from \"/src/store/store.ts\";\nexport function container(initializer) {\n  return new Container(\n    initializer.id,\n    initializer.name,\n    initializer.initialValue,\n    initializer.update\n  );\n}\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRhaW5lci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb250YWluZXIsIFVwZGF0ZVJlc3VsdCB9IGZyb20gXCIuL3N0b3JlLmpzXCJcblxuZXhwb3J0IGludGVyZmFjZSBDb250YWluZXJJbml0aWFsaXplcjxULCBNPiB7XG4gIGlkPzogc3RyaW5nLFxuICBpbml0aWFsVmFsdWU6IFQsXG4gIHVwZGF0ZT86IChtZXNzYWdlOiBNLCBjdXJyZW50OiBUKSA9PiBVcGRhdGVSZXN1bHQ8VD5cbiAgbmFtZT86IHN0cmluZ1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY29udGFpbmVyPFQsIE0gPSBULCBFID0gYW55Pihpbml0aWFsaXplcjogQ29udGFpbmVySW5pdGlhbGl6ZXI8VCwgTT4pOiBDb250YWluZXI8VCwgTSwgRT4ge1xuICByZXR1cm4gbmV3IENvbnRhaW5lcihcbiAgICBpbml0aWFsaXplci5pZCxcbiAgICBpbml0aWFsaXplci5uYW1lLFxuICAgIGluaXRpYWxpemVyLmluaXRpYWxWYWx1ZSxcbiAgICBpbml0aWFsaXplci51cGRhdGVcbiAgKVxufVxuIl0sIm1hcHBpbmdzIjoiQUFBQSxTQUFTLGlCQUErQjtBQVNqQyxnQkFBUyxVQUE2QixhQUE2RDtBQUN4RyxTQUFPLElBQUk7QUFBQSxJQUNULFlBQVk7QUFBQSxJQUNaLFlBQVk7QUFBQSxJQUNaLFlBQVk7QUFBQSxJQUNaLFlBQVk7QUFBQSxFQUNkO0FBQ0Y7IiwibmFtZXMiOltdfQ==",
    "functions": [
      {
        "functionName": "",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 0,
            "endOffset": 1175,
            "count": 1
          }
        ]
      },
      {
        "functionName": "container",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 56,
            "endOffset": 215,
            "count": 65
          }
        ]
      }
    ]
  },
  {
    "url": "http://localhost:5173/src/store/command.ts",
    "scriptId": "81",
    "source": "import { Command } from \"/src/store/store.ts\";\nexport function command(initializer = {}) {\n  return new Command(initializer.trigger);\n}\nexport function exec(command2, message) {\n  return {\n    type: \"exec\",\n    command: command2,\n    message\n  };\n}\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbW1hbmQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tbWFuZCwgRXhlY01lc3NhZ2UsIEdldFN0YXRlIH0gZnJvbSBcIi4vc3RvcmVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBDb21tYW5kSW5pdGlhbGl6ZXI8TT4ge1xuICB0cmlnZ2VyPzogKGdldDogR2V0U3RhdGUpID0+IE1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNvbW1hbmQ8TT4oaW5pdGlhbGl6ZXI6IENvbW1hbmRJbml0aWFsaXplcjxNPiA9IHt9KTogQ29tbWFuZDxNPiB7XG4gIHJldHVybiBuZXcgQ29tbWFuZDxNPihpbml0aWFsaXplci50cmlnZ2VyKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZXhlYzxNPihjb21tYW5kOiBDb21tYW5kPE0+LCBtZXNzYWdlOiBNKTogRXhlY01lc3NhZ2U8TT4ge1xuICByZXR1cm4ge1xuICAgIHR5cGU6IFwiZXhlY1wiLFxuICAgIGNvbW1hbmQsXG4gICAgbWVzc2FnZVxuICB9XG59Il0sIm1hcHBpbmdzIjoiQUFBQSxTQUFTLGVBQXNDO0FBTXhDLGdCQUFTLFFBQVcsY0FBcUMsQ0FBQyxHQUFlO0FBQzlFLFNBQU8sSUFBSSxRQUFXLFlBQVksT0FBTztBQUMzQztBQUVPLGdCQUFTLEtBQVFBLFVBQXFCLFNBQTRCO0FBQ3ZFLFNBQU87QUFBQSxJQUNMLE1BQU07QUFBQSxJQUNOLFNBQUFBO0FBQUEsSUFDQTtBQUFBLEVBQ0Y7QUFDRjsiLCJuYW1lcyI6WyJjb21tYW5kIl19",
    "functions": [
      {
        "functionName": "",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 0,
            "endOffset": 1228,
            "count": 1
          }
        ]
      },
      {
        "functionName": "command",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 54,
            "endOffset": 135,
            "count": 6
          }
        ]
      },
      {
        "functionName": "exec",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 143,
            "endOffset": 248,
            "count": 8
          }
        ]
      }
    ]
  },
  {
    "url": "http://localhost:5173/src/store/supplied.ts",
    "scriptId": "84",
    "source": "import { SuppliedState } from \"/src/store/store.ts\";\nexport function supplied(initializer) {\n  return new SuppliedState(initializer.id, initializer.name, initializer.initialValue);\n}\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN1cHBsaWVkLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFN1cHBsaWVkU3RhdGUgfSBmcm9tIFwiLi9zdG9yZVwiXG5cbmV4cG9ydCBpbnRlcmZhY2UgU3VwcGxpZWRTdGF0ZUluaXRpYWxpemVyPFQ+IHtcbiAgaWQ/OiBzdHJpbmdcbiAgbmFtZT86IHN0cmluZ1xuICBpbml0aWFsVmFsdWU6IFRcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHN1cHBsaWVkPFQsIE0gPSBhbnksIEUgPSBhbnk+KGluaXRpYWxpemVyOiBTdXBwbGllZFN0YXRlSW5pdGlhbGl6ZXI8VD4pOiBTdXBwbGllZFN0YXRlPFQsIE0sIEU+IHtcbiAgcmV0dXJuIG5ldyBTdXBwbGllZFN0YXRlKGluaXRpYWxpemVyLmlkLCBpbml0aWFsaXplci5uYW1lLCBpbml0aWFsaXplci5pbml0aWFsVmFsdWUpXG59Il0sIm1hcHBpbmdzIjoiQUFBQSxTQUFTLHFCQUFxQjtBQVF2QixnQkFBUyxTQUE4QixhQUFrRTtBQUM5RyxTQUFPLElBQUksY0FBYyxZQUFZLElBQUksWUFBWSxNQUFNLFlBQVksWUFBWTtBQUNyRjsiLCJuYW1lcyI6W119",
    "functions": [
      {
        "functionName": "",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 0,
            "endOffset": 950,
            "count": 1
          }
        ]
      },
      {
        "functionName": "supplied",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 60,
            "endOffset": 182,
            "count": 7
          }
        ]
      }
    ]
  },
  {
    "url": "http://localhost:5173/src/store/store.ts",
    "scriptId": "85",
    "source": "import { SimpleStateController } from \"/src/store/controller.ts\";\nimport { error, ok, pending } from \"/src/store/meta.ts\";\nconst registerState = Symbol(\"registerState\");\nconst initializeCommand = Symbol(\"initializeCommand\");\nconst getController = Symbol(\"getController\");\nconst getContainerController = Symbol(\"getContainerController\");\nconst initialValue = Symbol(\"initialValue\");\nexport class State {\n  constructor(id, name) {\n    this.id = id;\n    this.name = name;\n  }\n  toString() {\n    return this.name && this.id ? `${this.name}-${this.id}` : this.name ?? this.id ?? \"State\";\n  }\n}\nexport class MetaState extends State {\n  constructor(token) {\n    super(token.id ? `meta[${token.id}]` : void 0, `meta[${token.toString()}]`);\n    this.token = token;\n  }\n  [registerState](store) {\n    const tokenController = store[getController](this.token);\n    const controller = new SimpleStateController(ok());\n    tokenController.addListener({\n      notify: () => true,\n      update: () => {\n        controller.write(ok());\n      }\n    }, 0);\n    return controller;\n  }\n}\nexport class SuppliedState extends State {\n  constructor(id, name, initialValue2) {\n    super(id, name);\n    this.initialValue = initialValue2;\n  }\n  _meta;\n  [registerState](_) {\n    return new SimpleStateController(this.initialValue);\n  }\n  get meta() {\n    if (this._meta === void 0) {\n      this._meta = new MetaState(this);\n    }\n    return this._meta;\n  }\n}\nexport class Container extends State {\n  constructor(id, name, initialValue2, update) {\n    super(id, name);\n    this.initialValue = initialValue2;\n    this.update = update;\n  }\n  _meta;\n  get [initialValue]() {\n    return this.initialValue;\n  }\n  [registerState](store) {\n    return this.update ? new MessagePassingStateController(store, this.initialValue, this.update) : new SimpleStateController(this.initialValue);\n  }\n  get meta() {\n    if (this._meta === void 0) {\n      this._meta = new MetaState(this);\n    }\n    return this._meta;\n  }\n}\nexport class DerivedState extends State {\n  constructor(id, name, derivation) {\n    super(id, name);\n    this.derivation = derivation;\n  }\n  [registerState](store) {\n    return new DerivedStateController(store, this.derivation);\n  }\n}\nclass DependencyTrackingStateListener {\n  constructor(store) {\n    this.store = store;\n  }\n  version = 0;\n  updateTracker;\n  notify(version) {\n    if (version !== this.version)\n      return false;\n    if (this.updateTracker === void 0) {\n      this.updateTracker = { notifications: 0, hasChanged: false };\n      this.dependenciesWillUpdate();\n    }\n    this.updateTracker.notifications++;\n    return true;\n  }\n  update(hasChanged) {\n    this.updateTracker.notifications--;\n    if (hasChanged)\n      this.updateTracker.hasChanged = true;\n    if (this.updateTracker.notifications === 0) {\n      this.dependenciesHaveUpdated(this.updateTracker.hasChanged);\n      this.updateTracker = void 0;\n    }\n  }\n  getValue(state) {\n    const controller = this.store[getController](state);\n    controller.addListener(this, this.version);\n    return controller.value;\n  }\n  dependenciesWillUpdate() {\n  }\n  dependenciesHaveUpdated(_) {\n  }\n  resetDependencies() {\n    this.version = this.version + 1;\n  }\n}\nclass DerivedStateController extends DependencyTrackingStateListener {\n  constructor(store, derivation) {\n    super(store);\n    this.derivation = derivation;\n    this._value = this.deriveValue();\n  }\n  listeners = /* @__PURE__ */ new Map();\n  _value;\n  addListener(listener, version) {\n    this.listeners.set(listener, version);\n  }\n  removeListener(listener) {\n    this.listeners.delete(listener);\n  }\n  deriveValue() {\n    return this.derivation((state) => this.getValue(state), this._value);\n  }\n  dependenciesWillUpdate() {\n    for (const [listener, version] of this.listeners) {\n      const accepted = listener.notify(version);\n      if (!accepted) {\n        this.removeListener(listener);\n      }\n    }\n  }\n  updateListeners(hasChanged) {\n    for (const listener of this.listeners.keys()) {\n      listener.update(hasChanged);\n    }\n  }\n  dependenciesHaveUpdated(hasChanged) {\n    if (!hasChanged) {\n      this.updateListeners(false);\n      return;\n    }\n    this.resetDependencies();\n    const derived = this.deriveValue();\n    const derivedValueIsNew = !Object.is(derived, this._value);\n    this._value = derived;\n    this.updateListeners(derivedValueIsNew);\n  }\n  get value() {\n    return this._value;\n  }\n}\nclass ReactiveEffectController extends DependencyTrackingStateListener {\n  constructor(store, effect) {\n    super(store);\n    this.effect = effect;\n    this.init();\n  }\n  init() {\n    if (this.effect.init) {\n      this.effect.init((state) => {\n        return this.getValue(state);\n      });\n    } else {\n      this.effect.run((state) => {\n        return this.getValue(state);\n      });\n    }\n  }\n  dependenciesHaveUpdated(hasChanged) {\n    if (!hasChanged)\n      return;\n    this.resetDependencies();\n    this.effect.run((state) => {\n      return this.getValue(state);\n    });\n  }\n  unsubscribe() {\n    this.resetDependencies();\n  }\n}\nclass DispatchCommandQuery {\n  constructor(store, command, trigger) {\n    this.store = store;\n    this.command = command;\n    this.trigger = trigger;\n  }\n  run(get) {\n    this.store.dispatch({\n      type: \"exec\",\n      command: this.command,\n      message: this.trigger((state) => get(state))\n    });\n  }\n}\nexport class Command {\n  constructor(trigger) {\n    this.trigger = trigger;\n  }\n  [initializeCommand](store) {\n    if (this.trigger !== void 0) {\n      store.useEffect(new DispatchCommandQuery(store, this, this.trigger));\n    }\n  }\n}\nexport class Store {\n  registry = /* @__PURE__ */ new WeakMap();\n  commandRegistry = /* @__PURE__ */ new Map();\n  hooks;\n  tokenIdMap = /* @__PURE__ */ new Map();\n  getKeyForToken(token) {\n    if (token.id === void 0)\n      return token;\n    const key = this.tokenIdMap.get(token.id);\n    if (key === void 0) {\n      this.tokenIdMap.set(token.id, token);\n      return token;\n    }\n    return key;\n  }\n  [getController](token) {\n    const key = this.getKeyForToken(token);\n    let controller = this.registry.get(key);\n    if (controller === void 0) {\n      controller = token[registerState](this);\n      this.registry.set(key, controller);\n      if (this.hooks !== void 0 && token instanceof Container) {\n        this.hooks.onRegister(token);\n      }\n    }\n    return controller;\n  }\n  [getContainerController](token) {\n    return this[getController](token);\n  }\n  useHooks(hooks) {\n    this.hooks = hooks;\n  }\n  useEffect(effect) {\n    return new ReactiveEffectController(this, effect);\n  }\n  useCommand(command, handler) {\n    this.commandRegistry.set(command, handler);\n    command[initializeCommand](this);\n  }\n  containerReadyActions(container, controller) {\n    return {\n      get: (state) => {\n        return this[getController](state).value;\n      },\n      supply: (value) => {\n        controller.publish(value);\n      },\n      pending: (message) => {\n        this[getContainerController](container.meta).publish(pending(message));\n      },\n      error: (message, reason) => {\n        this[getContainerController](container.meta).publish(error(message, reason));\n      },\n      current: controller.value\n    };\n  }\n  containerWriteActions(container, controller) {\n    return {\n      get: (state) => {\n        return this[getController](state).value;\n      },\n      ok: (message) => {\n        controller.accept(message);\n      },\n      pending: (message) => {\n        this[getContainerController](container.meta).write(pending(message));\n      },\n      error: (message, reason) => {\n        this[getContainerController](container.meta).write(error(message, reason));\n      },\n      current: controller.value\n    };\n  }\n  useContainerHooks(container, hooks) {\n    const controllerWithHooks = this.containerControllerWithHooks(container, this[getContainerController](container), hooks);\n    this.registry.set(this.getKeyForToken(container), controllerWithHooks);\n    if (hooks.onReady !== void 0) {\n      hooks.onReady(this.containerReadyActions(container, controllerWithHooks));\n    }\n  }\n  containerControllerWithHooks(container, controller, hooks) {\n    let withHooks = controller;\n    if (hooks.onPublish) {\n      withHooks = new Proxy(withHooks, {\n        get: (target, prop, receiver) => {\n          if (prop === \"accept\") {\n            return (message) => {\n              target.publish(message);\n              hooks.onPublish(target.value, {\n                get: (state) => {\n                  return this[getController](state).value;\n                }\n              });\n            };\n          }\n          return Reflect.get(target, prop, receiver);\n        }\n      });\n    }\n    if (hooks.onWrite) {\n      withHooks = new Proxy(withHooks, {\n        get: (target, prop, receiver) => {\n          if (prop === \"accept\") {\n            return (message) => {\n              hooks.onWrite(message, this.containerWriteActions(container, target));\n            };\n          }\n          return Reflect.get(target, prop, receiver);\n        }\n      });\n    }\n    return withHooks;\n  }\n  dispatch(message) {\n    switch (message.type) {\n      case \"write\":\n        this[getContainerController](message.container).write(message.value);\n        break;\n      case \"update\":\n        const controller = this[getContainerController](message.container);\n        controller.write(message.generator(controller.value));\n        break;\n      case \"exec\":\n        this.commandRegistry.get(message.command)?.exec(message.message, {\n          get: (state) => {\n            return this[getController](state).value;\n          },\n          supply: (token, value) => {\n            this[getContainerController](token).publish(value);\n          },\n          pending: (token, message2) => {\n            this[getContainerController](token.meta).write(pending(message2));\n          },\n          error: (token, message2, reason) => {\n            this[getContainerController](token.meta).write(error(message2, reason));\n          }\n        });\n        break;\n      case \"reset\":\n        console.log(\"GOT RESET!\");\n        this.dispatch({\n          type: \"write\",\n          container: message.container,\n          value: message.container[initialValue]\n        });\n        break;\n      case \"use\":\n        const get = (state) => this[getController](state).value;\n        const result = message.rule.definition(get, message.input);\n        this.dispatch(result);\n        break;\n      case \"run\":\n        message.effect();\n        break;\n      case \"batch\":\n        console.log(\"HANDING BATCH!!!\");\n        for (let i = 0; i < message.messages.length; i++) {\n          this.dispatch(message.messages[i]);\n        }\n        break;\n    }\n  }\n}\nclass MessagePassingStateController extends SimpleStateController {\n  constructor(store, initialValue2, update) {\n    super(initialValue2);\n    this.store = store;\n    this.update = update;\n  }\n  accept(message) {\n    const result = this.update(message, this.value);\n    this.publish(result.value);\n    if (result.message !== void 0) {\n      this.store.dispatch(result.message);\n    }\n  }\n}\n\n//# sourceMappingURL=data:application/json;base64,",
    "functions": [
      {
        "functionName": "",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 0,
            "endOffset": 43587,
            "count": 1
          }
        ]
      },
      {
        "functionName": "State",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 405,
            "endOffset": 472,
            "count": 106
          }
        ]
      },
      {
        "functionName": "toString",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 475,
            "endOffset": 586,
            "count": 22
          },
          {
            "startOffset": 509,
            "endOffset": 519,
            "count": 7
          },
          {
            "startOffset": 520,
            "endOffset": 547,
            "count": 3
          },
          {
            "startOffset": 548,
            "endOffset": 581,
            "count": 19
          },
          {
            "startOffset": 560,
            "endOffset": 570,
            "count": 15
          },
          {
            "startOffset": 571,
            "endOffset": 581,
            "count": 8
          }
        ]
      },
      {
        "functionName": "MetaState",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 630,
            "endOffset": 759,
            "count": 11
          },
          {
            "startOffset": 670,
            "endOffset": 691,
            "count": 4
          },
          {
            "startOffset": 692,
            "endOffset": 700,
            "count": 7
          }
        ]
      },
      {
        "functionName": "",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 762,
            "endOffset": 1064,
            "count": 8
          }
        ]
      },
      {
        "functionName": "notify",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 953,
            "endOffset": 963,
            "count": 4
          }
        ]
      },
      {
        "functionName": "update",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 979,
            "endOffset": 1026,
            "count": 4
          }
        ]
      },
      {
        "functionName": "<instance_members_initializer>",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 1108,
            "endOffset": 1430,
            "count": 7
          }
        ]
      },
      {
        "functionName": "SuppliedState",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 1112,
            "endOffset": 1214,
            "count": 7
          }
        ]
      },
      {
        "functionName": "",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 1226,
            "endOffset": 1307,
            "count": 3
          }
        ]
      },
      {
        "functionName": "get meta",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 1310,
            "endOffset": 1428,
            "count": 6
          },
          {
            "startOffset": 1354,
            "endOffset": 1401,
            "count": 3
          }
        ]
      },
      {
        "functionName": "<instance_members_initializer>",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 1468,
            "endOffset": 1976,
            "count": 65
          }
        ]
      },
      {
        "functionName": "Container",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 1472,
            "endOffset": 1608,
            "count": 65
          }
        ]
      },
      {
        "functionName": "",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 1620,
            "endOffset": 1676,
            "count": 1
          }
        ]
      },
      {
        "functionName": "",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 1679,
            "endOffset": 1853,
            "count": 53
          },
          {
            "startOffset": 1727,
            "endOffset": 1801,
            "count": 7
          },
          {
            "startOffset": 1802,
            "endOffset": 1848,
            "count": 46
          }
        ]
      },
      {
        "functionName": "get meta",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 1856,
            "endOffset": 1974,
            "count": 15
          },
          {
            "startOffset": 1900,
            "endOffset": 1947,
            "count": 8
          }
        ]
      },
      {
        "functionName": "DerivedState",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 2021,
            "endOffset": 2115,
            "count": 23
          }
        ]
      },
      {
        "functionName": "",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 2118,
            "endOffset": 2209,
            "count": 19
          }
        ]
      },
      {
        "functionName": "<instance_members_initializer>",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 2250,
            "endOffset": 3203,
            "count": 71
          }
        ]
      },
      {
        "functionName": "DependencyTrackingStateListener",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 2254,
            "endOffset": 2302,
            "count": 71
          }
        ]
      },
      {
        "functionName": "notify",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 2337,
            "endOffset": 2621,
            "count": 137
          },
          {
            "startOffset": 2395,
            "endOffset": 2408,
            "count": 5
          },
          {
            "startOffset": 2408,
            "endOffset": 2448,
            "count": 132
          },
          {
            "startOffset": 2448,
            "endOffset": 2560,
            "count": 130
          },
          {
            "startOffset": 2560,
            "endOffset": 2620,
            "count": 132
          }
        ]
      },
      {
        "functionName": "update",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 2624,
            "endOffset": 2910,
            "count": 132
          },
          {
            "startOffset": 2711,
            "endOffset": 2748,
            "count": 131
          },
          {
            "startOffset": 2797,
            "endOffset": 2906,
            "count": 130
          }
        ]
      },
      {
        "functionName": "getValue",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 2913,
            "endOffset": 3068,
            "count": 239
          }
        ]
      },
      {
        "functionName": "dependenciesWillUpdate",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 3071,
            "endOffset": 3101,
            "count": 91
          }
        ]
      },
      {
        "functionName": "dependenciesHaveUpdated",
        "isBlockCoverage": false,
        "ranges": [
          {
            "startOffset": 3104,
            "endOffset": 3136,
            "count": 0
          }
        ]
      },
      {
        "functionName": "resetDependencies",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 3139,
            "endOffset": 3201,
            "count": 130
          }
        ]
      },
      {
        "functionName": "<instance_members_initializer>",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 3273,
            "endOffset": 4419,
            "count": 19
          }
        ]
      },
      {
        "functionName": "DerivedStateController",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 3277,
            "endOffset": 3403,
            "count": 19
          }
        ]
      },
      {
        "functionName": "addListener",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 3457,
            "endOffset": 3536,
            "count": 66
          }
        ]
      },
      {
        "functionName": "removeListener",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 3539,
            "endOffset": 3606,
            "count": 1
          }
        ]
      },
      {
        "functionName": "deriveValue",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 3609,
            "endOffset": 3702,
            "count": 58
          }
        ]
      },
      {
        "functionName": "",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 3652,
            "endOffset": 3683,
            "count": 86
          }
        ]
      },
      {
        "functionName": "dependenciesWillUpdate",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 3705,
            "endOffset": 3916,
            "count": 39
          },
          {
            "startOffset": 3858,
            "endOffset": 3906,
            "count": 1
          }
        ]
      },
      {
        "functionName": "updateListeners",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 3919,
            "endOffset": 4045,
            "count": 39
          },
          {
            "startOffset": 3999,
            "endOffset": 4041,
            "count": 38
          }
        ]
      },
      {
        "functionName": "dependenciesHaveUpdated",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 4048,
            "endOffset": 4373,
            "count": 39
          },
          {
            "startOffset": 4107,
            "endOffset": 4163,
            "count": 0
          }
        ]
      },
      {
        "functionName": "get value",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 4376,
            "endOffset": 4417,
            "count": 66
          }
        ]
      },
      {
        "functionName": "ReactiveEffectController",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 4495,
            "endOffset": 4588,
            "count": 52
          }
        ]
      },
      {
        "functionName": "init",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 4591,
            "endOffset": 4815,
            "count": 52
          },
          {
            "startOffset": 4626,
            "endOffset": 4716,
            "count": 1
          },
          {
            "startOffset": 4716,
            "endOffset": 4811,
            "count": 51
          }
        ]
      },
      {
        "functionName": "",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 4651,
            "endOffset": 4708,
            "count": 1
          }
        ]
      },
      {
        "functionName": "",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 4746,
            "endOffset": 4803,
            "count": 54
          }
        ]
      },
      {
        "functionName": "dependenciesHaveUpdated",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 4818,
            "endOffset": 5000,
            "count": 91
          },
          {
            "startOffset": 4883,
            "endOffset": 4890,
            "count": 1
          },
          {
            "startOffset": 4890,
            "endOffset": 4999,
            "count": 90
          }
        ]
      },
      {
        "functionName": "",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 4941,
            "endOffset": 4994,
            "count": 98
          }
        ]
      },
      {
        "functionName": "unsubscribe",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 5003,
            "endOffset": 5052,
            "count": 1
          }
        ]
      },
      {
        "functionName": "DispatchCommandQuery",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 5086,
            "endOffset": 5208,
            "count": 2
          }
        ]
      },
      {
        "functionName": "run",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 5211,
            "endOffset": 5359,
            "count": 5
          }
        ]
      },
      {
        "functionName": "",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 5325,
            "endOffset": 5346,
            "count": 7
          }
        ]
      },
      {
        "functionName": "Command",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 5387,
            "endOffset": 5441,
            "count": 6
          }
        ]
      },
      {
        "functionName": "",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 5444,
            "endOffset": 5593,
            "count": 6
          },
          {
            "startOffset": 5506,
            "endOffset": 5589,
            "count": 2
          }
        ]
      },
      {
        "functionName": "<instance_members_initializer>",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 5615,
            "endOffset": 10708,
            "count": 49
          }
        ]
      },
      {
        "functionName": "getKeyForToken",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 5761,
            "endOffset": 5996,
            "count": 392
          },
          {
            "startOffset": 5820,
            "endOffset": 5833,
            "count": 366
          },
          {
            "startOffset": 5833,
            "endOffset": 5905,
            "count": 26
          },
          {
            "startOffset": 5905,
            "endOffset": 5976,
            "count": 6
          },
          {
            "startOffset": 5976,
            "endOffset": 5995,
            "count": 20
          }
        ]
      },
      {
        "functionName": "",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 5999,
            "endOffset": 6378,
            "count": 384
          },
          {
            "startOffset": 6144,
            "endOffset": 6351,
            "count": 83
          },
          {
            "startOffset": 6267,
            "endOffset": 6296,
            "count": 1
          },
          {
            "startOffset": 6298,
            "endOffset": 6345,
            "count": 1
          }
        ]
      },
      {
        "functionName": "",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 6381,
            "endOffset": 6457,
            "count": 119
          }
        ]
      },
      {
        "functionName": "useHooks",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 6460,
            "endOffset": 6505,
            "count": 1
          }
        ]
      },
      {
        "functionName": "useEffect",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 6508,
            "endOffset": 6586,
            "count": 52
          }
        ]
      },
      {
        "functionName": "useCommand",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 6589,
            "endOffset": 6709,
            "count": 6
          }
        ]
      },
      {
        "functionName": "containerReadyActions",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 6712,
            "endOffset": 7217,
            "count": 5
          }
        ]
      },
      {
        "functionName": "get",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 6783,
            "endOffset": 6852,
            "count": 2
          }
        ]
      },
      {
        "functionName": "supply",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 6868,
            "endOffset": 6923,
            "count": 4
          }
        ]
      },
      {
        "functionName": "pending",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 6940,
            "endOffset": 7042,
            "count": 1
          }
        ]
      },
      {
        "functionName": "error",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 7057,
            "endOffset": 7173,
            "count": 1
          }
        ]
      },
      {
        "functionName": "containerWriteActions",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 7220,
            "endOffset": 7720,
            "count": 9
          }
        ]
      },
      {
        "functionName": "get",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 7291,
            "endOffset": 7360,
            "count": 2
          }
        ]
      },
      {
        "functionName": "ok",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 7372,
            "endOffset": 7430,
            "count": 5
          }
        ]
      },
      {
        "functionName": "pending",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 7447,
            "endOffset": 7547,
            "count": 2
          }
        ]
      },
      {
        "functionName": "error",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 7562,
            "endOffset": 7676,
            "count": 3
          }
        ]
      },
      {
        "functionName": "useContainerHooks",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 7723,
            "endOffset": 8089,
            "count": 8
          },
          {
            "startOffset": 7997,
            "endOffset": 8085,
            "count": 5
          }
        ]
      },
      {
        "functionName": "containerControllerWithHooks",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 8092,
            "endOffset": 9081,
            "count": 8
          },
          {
            "startOffset": 8210,
            "endOffset": 8685,
            "count": 2
          }
        ]
      },
      {
        "functionName": "get",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 8266,
            "endOffset": 8669,
            "count": 42
          },
          {
            "startOffset": 8329,
            "endOffset": 8605,
            "count": 2
          },
          {
            "startOffset": 8605,
            "endOffset": 8668,
            "count": 40
          }
        ]
      },
      {
        "functionName": "",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 8350,
            "endOffset": 8592,
            "count": 2
          }
        ]
      },
      {
        "functionName": "get",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 8471,
            "endOffset": 8560,
            "count": 1
          }
        ]
      },
      {
        "functionName": "get",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 8765,
            "endOffset": 9039,
            "count": 92
          },
          {
            "startOffset": 8828,
            "endOffset": 8975,
            "count": 9
          },
          {
            "startOffset": 8975,
            "endOffset": 9038,
            "count": 83
          }
        ]
      },
      {
        "functionName": "",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 8849,
            "endOffset": 8962,
            "count": 9
          }
        ]
      },
      {
        "functionName": "dispatch",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 9084,
            "endOffset": 10706,
            "count": 120
          },
          {
            "startOffset": 9138,
            "endOffset": 9244,
            "count": 95
          },
          {
            "startOffset": 9251,
            "endOffset": 9419,
            "count": 0
          },
          {
            "startOffset": 9426,
            "endOffset": 10028,
            "count": 13
          },
          {
            "startOffset": 10035,
            "endOffset": 10248,
            "count": 1
          },
          {
            "startOffset": 10255,
            "endOffset": 10445,
            "count": 8
          },
          {
            "startOffset": 10452,
            "endOffset": 10504,
            "count": 1
          },
          {
            "startOffset": 10511,
            "endOffset": 10696,
            "count": 2
          },
          {
            "startOffset": 10624,
            "endOffset": 10681,
            "count": 4
          }
        ]
      },
      {
        "functionName": "get",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 9529,
            "endOffset": 9606,
            "count": 3
          }
        ]
      },
      {
        "functionName": "supply",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 9626,
            "endOffset": 9721,
            "count": 5
          }
        ]
      },
      {
        "functionName": "pending",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 9742,
            "endOffset": 9855,
            "count": 3
          }
        ]
      },
      {
        "functionName": "error",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 9874,
            "endOffset": 10001,
            "count": 1
          }
        ]
      },
      {
        "functionName": "get",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 10287,
            "endOffset": 10330,
            "count": 10
          }
        ]
      },
      {
        "functionName": "MessagePassingStateController",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 10779,
            "endOffset": 10902,
            "count": 7
          }
        ]
      },
      {
        "functionName": "accept",
        "isBlockCoverage": true,
        "ranges": [
          {
            "startOffset": 10905,
            "endOffset": 11097,
            "count": 12
          },
          {
            "startOffset": 11043,
            "endOffset": 11093,
            "count": 4
          }
        ]
      }
    ]
  }
]